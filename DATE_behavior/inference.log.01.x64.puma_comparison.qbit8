x.shape
torch.Size([1, 64, 64])
input_ids have 23 tokens
we and pe write: before add_cap to get xpe: latency in us: energy in uJ:
0.013439999999999999 0.00021052176
we+pe = xpe: output: latency in us, energy in uJ
0.7343999999999999 0.00237568


Operation0: Embedding Layer latency: 0.7478400000000001 us, and Energy: 0.0025862017599999998 uJ
w_q.shape
torch.Size([64, 64])
fet_mac_lat: 10.1 fet_mac_en: 4.0
debug fet_mac: xbar_count: 8.0 wl_count: 64 lat_operation_count: 64 en_operation_count: 512.0 fet_mac_lat: 10.1 fet_mac_en: 4.0
fet_mac_lat: 10.1 fet_mac_en: 4.0
debug fet_mac: xbar_count: 8.0 wl_count: 64 lat_operation_count: 64 en_operation_count: 512.0 fet_mac_lat: 10.1 fet_mac_en: 4.0
fet_mac_lat: 10.1 fet_mac_en: 4.0
debug fet_mac: xbar_count: 8.0 wl_count: 64 lat_operation_count: 64 en_operation_count: 512.0 fet_mac_lat: 10.1 fet_mac_en: 4.0
lat,en: fet mac output compute q,k,v
2.68704 0.00873020176
Operation1: Latency and energy from MUL of X and W_Q: 0.6464 us and 0.002048 uJ
query.shape
torch.Size([1, 64, 64])
query.shape
torch.Size([1, 1, 64, 64])
lat,en: after cap_bl_to_sa_wr_rm: q,k,v write
2.78304 0.008818521760000001
Operation2: cap_write q,k,v: Latency = 0.032 us and Energy = 8.832000000000153e-05 uJ
cap_mac_lat: 10.1 cap_mac_en: 3.8
debug cap_mac: xbar_count: 8.0 wl_count: 64 lat_operation_count: 64 en_operation_count: 512.0 cap_mac_lat: 10.1 cap_mac_en: 3.8
lat,en: after qkt mac computation
3.333472 0.010764121760000002
Operation3: cap mac QK_T: Latency = 0.6464000000000001 us and Energy = 0.0019456000000000005 uJ
attention_scores.shape
torch.Size([1, 1, 64, 64])
qk_t write output: lat,en in us and uJ
3.365472 0.010793561760000002
Operation Softmax Layerwise: Softmax lat: 0.0008049999999998363 us en: 0.0006197964799999991uJ
Operation Softmax Layerwise: cap_add lat: 0.02759999999999991 us en: 0.00239616uJ
Operation Softmax Layerwise: scaling lat: 0.01009999999999991 us en: 3.0399999999999638e-05uJ
softmax output: lat,en in us and uJ
3.403977 0.01383991824


Operation4: Softmax and writing QK_T together:  Latency = 0.07050499999999965 us and Energy = 0.003075796479999999 uJ
Operation softmax: Latency = 0.03850499999999966 us and Energy = 0.0030463564799999986
attention_scores.shape
torch.Size([1, 1, 64, 64])
cap_mac_lat: 10.1 cap_mac_en: 3.8
debug cap_mac: xbar_count: 8.0 wl_count: 64 lat_operation_count: 64 en_operation_count: 512.0 cap_mac_lat: 10.1 cap_mac_en: 3.8
qkt*v output: lat,en in us and uJ
4.050377 0.01578551824
Operation5: CAP-MAC Softmax output*V computation:  Latency = 0.6464000000000001 us and Energy = 0.0019456000000000005 uJ


attention_matrix.shape
torch.Size([1, 1, 64, 64])
Operation5.5: lat_only_write_mha = 0.032 us and en_only_write_mha = 2.944000000000051e-05 uJ

after writing soft(qkt)*v in us and uJ
4.082377 0.015814958240000003


fet_mac_lat: 10.1 fet_mac_en: 4.0
debug fet_mac: xbar_count: 8.0 wl_count: 64 lat_operation_count: 64 en_operation_count: 512.0 fet_mac_lat: 10.1 fet_mac_en: 4.0
MHA output lat,en results in us and uJ
4.728777 0.01786295824
Operation6: FET MAC: Multiplication with W_O:  Latency = 0.6464000000000001 us and Energy = 0.002047999999999998 uJ


attention_matrix.shape
torch.Size([1, 64, 64])
After writing MHA output to the FET: lat,en in us and uJ
6.008777 0.01788439824
add_dram:x with mha output:  lat,en in us and uJ
6.710537 0.01904663824


Operation norm ADD: lat_only_norm_add: 0.7017600000000003 us and en_only_norm_add = 0.0011622400000000017 uJ

layernorm output1 shape:
torch.Size([1, 64, 64])
after writing the output of the x+mha_output in the fet: lat,en in us and uJ
6.710537 0.01904663824


ff1 layer output shape:
torch.Size([1, 64, 3072])
fet_mac_lat: 10.1 fet_mac_en: 4.0
batch: 1, seq_len: 64, ff_hidden_dim: 3072, d_model: 64
debug fet_mac: xbar_count: 384.0 wl_count: 64 lat_operation_count: 64 en_operation_count: 24576.0 fet_mac_lat: 10.1 fet_mac_en: 4.0
ff1 mac output: lat,en in us and uJ
7.356937 0.11735063824
Operation7: FET MAC FF1:  Latency = 0.6463999999999996 us and Energy = 0.098304 uJ
ff1 mac output FET write: lat,en in us and uJ
8.636937 0.11837975824


ff_relu shape:
torch.Size([1, 64, 3072])
fet_mac_lat: 10.1 fet_mac_en: 4.0
batch: 1, seq_len: 64, ff_hidden_dim: 3072, d_model: 64
debug fet_mac: xbar_count: 384.0 wl_count: 64 lat_operation_count: 64 en_operation_count: 24576.0 fet_mac_lat: 10.1 fet_mac_en: 4.0
FF2 mac operation output: lat,en in us and uJ
9.283337 0.21668375824
Operation8: FET MAC FF2:  Latency = 0.6463999999999996 us and Energy = 0.098304 uJ
ff2 mac output FET write: lat,en in us and uJ
10.563336999999999 0.21670519824


ff_out.shape
torch.Size([1, 64, 64])
torch.Size([1, 64, 64])
Operation norm ADD2: latency = 0.7017600000000003 us and energy = 0.7017600000000003 uJ

Encoder layer output: add_dram x+ff2 : lat,en in us and uJ
11.265096999999999 0.21786743824
Encoder output write FET: lat,en in us and uJ
11.265096999999999 0.21786743824


lat_before_mha,lat_after_mha,lat_after_encoder in us and uJ
0.7478400000000001 4.082377 11.265096999999999
en_before_mha,en_after_mha,en_after_encoder in us and uJ
0.0025862017599999998 0.015814958240000003 0.21786743824


end_to_end_latency is 0.011265097 ms and end_to_end_energy is 0.00021786743824 mJ
